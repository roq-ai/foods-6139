generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menu_item   menu_item[]
  order       order[]
}

model delivery {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status     String   @db.VarChar(255)
  driver_id  String?  @db.Uuid
  order_id   String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu_item {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  price       Int
  business_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  business    business? @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status      String     @db.VarChar(255)
  customer_id String?    @db.Uuid
  business_id String?    @db.Uuid
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  delivery    delivery[]
  business    business?  @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
  delivery    delivery[]
  order       order[]
}
